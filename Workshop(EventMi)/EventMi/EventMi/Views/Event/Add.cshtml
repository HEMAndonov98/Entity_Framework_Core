@model EventMi.Core.Models.EventModel;

@{
    ViewBag.Title = "Add an Event";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<div class="row">
    <div class="col-sm-12 offset-lg-2 col-lg-8 offset-xl-3 col-xl-6">
        <form asp-action="Add" method="post">
            <div class="form-floating mb-3">
                <input asp-for="Name" class="form-control" id="floatingInput" placeholder="name@example.com" aria-required="true" />
                 <label for="floatingInput">Name</label>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Start" id="startDate" class="form-control" placeholder="name@example.com" aria-required="true" value="@DateTime.Now"/>
                <label asp-for="Start" for="startDate" class="form-label">Event start date</label>
                <span asp-validation-for="Start" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="End" id="endDate" class="form-control" placeholder="name@example.com" aria-required="true" onchange="compare()"/>
                <label asp-for="End" for="endDate" class="form-label">Event end date</label>
                <span asp-validation-for="End" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Place" id="eventPlaceValue" placeholder="name@example.com"  class="form-control" aria-required="true" />
                <label asp-for="Place" for="eventPlaceValue" class="form-label">Place</label>
                <span asp-validation-for="End" class="text-danger"></span>
            </div>
            <div class="mb-3 text-center">
                <input class="btn btn-primary" type="submit" value="Add" />
            </div>
        </form>
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial"/>
}

<script>
  function compare() {
    let startDate = document.getElementById('startDate').value;
    let endDate = document.getElementById('endDate').value;
    
    if (new Date(startDate) > new Date(endDate)) {
      let errorMessage = document.createElement("span");
      errorMessage.style.color = "red";
      errorMessage.innerHTML = "End date cannot be before the start date.";
      
      let endDateField = document.getElementById('endDate');
      
      // Remove any existing error message before inserting the new one
      let existingErrorMessage = endDateField.parentNode.querySelector(".error-message");
      if (existingErrorMessage) {
        existingErrorMessage.remove();
      }
      
      endDateField.parentNode.insertBefore(errorMessage, endDateField.nextSibling);
      errorMessage.classList.add("error-message");
    } else {
      // Remove any existing error message if the dates are valid
      let existingErrorMessage = document.querySelector(".error-message");
      if (existingErrorMessage) {
        existingErrorMessage.remove();
      }
    }
  }
</script>
